{"version":3,"sources":["components/Menu/MenuButton.jsx","components/Menu/MenuInput.jsx","components/Menu/MenuSelect.jsx","components/Menu/MenuComponent.jsx","utils/methods.js","components/Menu/MenuModal.jsx","components/Menu/MenuContainer.jsx","components/common/Message/Message.jsx","components/Grid/Grid.jsx","App.js","serviceWorker.js","index.js"],"names":["MenuButton","title","onClickAction","onClick","className","block","type","MenuInput","labelTitle","placeholder","id","htmlFor","value","onChange","e","target","Option","Select","MenuSelect","defaultValue","style","width","SubMenu","Menu","MenuComponent","menuOpen","x","y","changeX","changeY","addObj","setSymbol","delObj","changeFill","fill","restart","rotateObj","changeRadius","radius","searchObj","newY","newX","changeNewX","changeNewY","moveObj","symbol","rootSubmenuKeys","useState","state","setState","right","mode","openKeys","onOpenChange","latestOpenKey","find","key","indexOf","onTitleClick","icon","PlusOutlined","MinusOutlined","SearchOutlined","UndoOutlined","SwapOutlined","ERROR_COORD_EXIST","ERROR_NOT_INT","ERROR_COORD_MAX_MIN","findObjSelector","data","obj","objIsExist","item","isInt","objMaxMin","showMessage","mess","document","querySelector","classList","add","setTimeout","remove","rotateObjSelector","delay","newData","forEach","animate","Promise","resolve","rotateObjMinMaxSelector","MenuModal","hideModal","modalIsOpen","changeObj","visible","onOk","onCancel","cancelText","MenuContainer","setData","setMessage","toggleMenuOpen","setX","setY","setNewX","setNewY","setRadius","setFill","setObj","toggleModalIsOpen","a","currentRadius","currentX","currentY","result","findIndex","rotateObjMinMax","currentData","length","addObjSelector","console","log","objInd","splice","delObjSelector","newObj","objIndex","mutationArr","moveObjSelector","changeObjSelector","Message","message","color","fontSize","Grid","theme","VictoryTheme","material","domain","duration","size","datum","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.14db1841.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Menu.scss'\r\nimport {Button} from \"antd\";\r\n\r\nexport const MenuButton = ({title, onClickAction}) => {\r\n    return (\r\n        <div onClick={onClickAction} className=\"menu-content-block\">\r\n            <Button block type=\"primary\">{title}</Button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Input} from \"antd\";\r\n\r\nexport const MenuInput = ({labelTitle, placeholder, type, id, htmlFor, value, onChange}) => {\r\n    return (\r\n        <div className=\"menu-content-block\">\r\n            <label htmlFor={htmlFor}>{labelTitle}</label>\r\n            <Input value={value} onChange={(e) => onChange(e.target.value)}\r\n                   id={id} placeholder={placeholder} type={type} />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Select} from \"antd\";\r\n\r\nconst {Option} = Select;\r\n\r\nexport const MenuSelect = ({title = 'Выберите символ:', defaultValue = 'circle', onChange,\r\n                           id = 'addSelect', htmlFor = 'addSelect', value}) => {\r\n    return (\r\n        <div className=\"menu-content-block\">\r\n            <label htmlFor={htmlFor}>{title}</label>\r\n            <Select id={id} value={value} defaultValue={defaultValue} style={{width: '100%'}}\r\n                    onChange={onChange}>\r\n                <Option value=\"circle\">circle</Option>\r\n                <Option value=\"star\">star</Option>\r\n                <Option value=\"square\">square</Option>\r\n                <Option value=\"diamond\">diamond</Option>\r\n                <Option value=\"triangleUp\">triangleUp</Option>\r\n            </Select>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {Menu} from 'antd';\r\nimport {PlusOutlined, MinusOutlined, UndoOutlined, SearchOutlined, SwapOutlined} from '@ant-design/icons'\r\nimport {MenuButton} from \"./MenuButton\";\r\nimport {MenuInput} from \"./MenuInput\";\r\nimport {MenuSelect} from \"./MenuSelect\";\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nexport const MenuComponent = ({\r\n                                  menuOpen, x, y, changeX, changeY, addObj, setSymbol, delObj, changeFill,\r\n                                  fill, restart, rotateObj, changeRadius, radius, searchObj, newY, newX,\r\n                                  changeNewX, changeNewY, moveObj, symbol\r\n                              }) => {\r\n    const activeStyle = {\r\n        right: 0\r\n    }\r\n    const rootSubmenuKeys = ['sub1', 'sub2', 'sub3', 'sub4', 'sub5'];\r\n\r\n    const [state, setState] = useState([])\r\n\r\n    const onOpenChange = openKeys => {\r\n        const latestOpenKey = openKeys.find(key => state.indexOf(key) === -1);\r\n        if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n            setState([openKeys]);\r\n        } else {\r\n            setState(latestOpenKey ? [latestOpenKey] : []);\r\n        }\r\n    };\r\n    return (\r\n        <div style={menuOpen ? activeStyle : null} className=\"menu-content\">\r\n            <h2>Выберите действие</h2>\r\n            <Menu\r\n                mode=\"inline\"\r\n                openKeys={state}\r\n                onOpenChange={onOpenChange}\r\n                style={{width: 256}}\r\n            >\r\n                <SubMenu\r\n                    onTitleClick={restart}\r\n                    key=\"sub1\"\r\n                    icon={<PlusOutlined/>}\r\n                    title='Добавить объект'\r\n                >\r\n                    <MenuInput id='addObjX' placeholder='Введите координату X' type='number'\r\n                               htmlFor='addObjX' labelTitle='Введите координату X'\r\n                               onChange={changeX} value={x}\r\n                    />\r\n                    <MenuInput id='addObjY' placeholder='Введите координату Y' type='number'\r\n                               htmlFor='addObjY' labelTitle='Введите координату Y:'\r\n                               onChange={changeY} value={y}\r\n                    />\r\n                    <MenuSelect value={symbol} onChange={setSymbol}/>\r\n                    <MenuInput id='addObjColor' type='color'\r\n                               htmlFor='addObjColor' labelTitle='Выберите цвет:'\r\n                               onChange={changeFill} value={fill}\r\n                    />\r\n                    <MenuButton onClickAction={addObj} title='Добавить объект'/>\r\n                </SubMenu>\r\n                <SubMenu icon={<MinusOutlined/>}\r\n                         key=\"sub2\" title=\"Удалить объект\"\r\n                         onTitleClick={restart}\r\n                >\r\n                    <MenuInput id='delObjX' placeholder='Введите координату X' type='number'\r\n                               htmlFor='delObjX' labelTitle='Введите координату X'\r\n                               onChange={changeX} value={x}\r\n                    />\r\n                    <MenuInput id='delObjY' placeholder='Введите координату Y' type='number'\r\n                               htmlFor='delObjY' labelTitle='Введите координату Y:'\r\n                               onChange={changeY} value={y}\r\n                    />\r\n                    <MenuButton title='Удалить объект' onClickAction={delObj}/>\r\n                </SubMenu>\r\n                <SubMenu icon={<SearchOutlined/>}\r\n                         key=\"sub3\" title=\"Найти и изменить объект\"\r\n                         onTitleClick={restart}\r\n                >\r\n                    <MenuInput id='searchObjX' placeholder='Введите координату X' type='number'\r\n                               htmlFor='searchObjX' labelTitle='Введите координату X'\r\n                               onChange={changeX} value={x}\r\n                    />\r\n                    <MenuInput id='searchObjY' placeholder='Введите координату Y' type='number'\r\n                               htmlFor='searchObjY' labelTitle='Введите координату Y:'\r\n                               onChange={changeY} value={y}\r\n                    />\r\n                    <MenuButton title='Найти объект' onClickAction={searchObj}/>\r\n                </SubMenu>\r\n                <SubMenu key=\"sub4\" icon={<UndoOutlined/>} title=\"Вращать объект\" onTitleClick={restart}>\r\n                    <MenuInput id='rotateObjX' placeholder='Введите координату X' type='number'\r\n                               htmlFor='rotateObjX' labelTitle='Введите координату X:'\r\n                               onChange={changeX} value={x}\r\n                    />\r\n                    <MenuInput id='rotateObjY' placeholder='Введите координату Y' type='number'\r\n                               htmlFor='rotateObjY' labelTitle='Введите координату Y:'\r\n                               onChange={changeY} value={y}\r\n                    />\r\n                    <MenuInput id='setRadius' placeholder='Введите радиус' type='number'\r\n                               htmlFor='delObjY' labelTitle='Введите радиус:'\r\n                               onChange={changeRadius} value={radius}\r\n                    />\r\n                    <MenuButton onClickAction={rotateObj} title='Вращать объект'/>\r\n                </SubMenu>\r\n                <SubMenu icon={<SwapOutlined/>}\r\n                         key=\"sub5\" title=\"Переместить объект\"\r\n                         onTitleClick={restart}\r\n                >\r\n                    <MenuInput id='moveObjX' placeholder='Введите координату X' type='number'\r\n                               htmlFor='moveObjX' labelTitle='Введите координату X:'\r\n                               onChange={changeX} value={x}\r\n                    />\r\n                    <MenuInput id='moveObjY' placeholder='Введите координату Y' type='number'\r\n                               htmlFor='moveObjY' labelTitle='Введите координату Y:'\r\n                               onChange={changeY} value={y}\r\n                    />\r\n                    <MenuInput id='moveObjNewX' placeholder='Введите новую координату X' type='number'\r\n                               htmlFor='moveObjNewX' labelTitle='Введите новую координату X:'\r\n                               onChange={changeNewX} value={newX}\r\n                    />\r\n                    <MenuInput id='moveObjNewY' placeholder='Введите новую координату Y' type='number'\r\n                               htmlFor='moveObjNewY' labelTitle='Введите новую координату Y:'\r\n                               onChange={changeNewY} value={newY}\r\n                    />\r\n                    <MenuButton title='Переместить объект' onClickAction={moveObj}/>\r\n                </SubMenu>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}","const ERROR_COORD_EXIST = 'Объект с такими координатами уже существует!'\r\nconst ERROR_NOT_INT = 'Объект должен содержать целочисленные координаты!'\r\nconst ERROR_COORD_MAX_MIN = 'Координаты объекта должны быть не меньше 0 и не больше 10!'\r\nconst ERROR_NOT_FOUND = 'Объект не найден!'\r\nconst ERROR_GRID_MIN_MAX = 'Невозможно задать данный радиус! Объект не может выходить за пределы сетки.'\r\nconst ERROR_DATA_MAX = 'Максимальное количество объектов 10!'\r\n\r\nexport const delObjSelector = (data, obj) => {\r\n    debugger\r\n    const newData = [...data]\r\n    // const objIsExist = findObjSelector(data, obj)\r\n    const objInd = newData.findIndex(item => (item.x === obj.x) && (item.y === obj.y))\r\n    if (objInd < 0) return ERROR_NOT_FOUND\r\n    newData.splice(objInd, 1)\r\n    // const newData = data.filter((item) => (item.x !== obj.x) && (item.y !== obj.y))\r\n    return newData\r\n}\r\n\r\nexport const addObjSelector = (data, obj) => {\r\n    const objIsExist = findObjSelector(data, obj)\r\n    if (data.length >= 10) {\r\n        return ERROR_DATA_MAX\r\n    }\r\n    if (objIsExist) {\r\n        return ERROR_COORD_EXIST\r\n    }\r\n    if (!isInt(obj)) {\r\n        return ERROR_NOT_INT\r\n    }\r\n    if (!objMaxMin(obj)) {\r\n        return ERROR_COORD_MAX_MIN\r\n    }\r\n    const newData = [...data, obj]\r\n    return newData\r\n}\r\n\r\nexport const changeObjSelector = (data, obj, newObj) => {\r\n    if (obj.x !== newObj.x && obj.y !== newObj.y) {\r\n        if (findObjSelector(data, newObj)) {\r\n            return (ERROR_COORD_EXIST)\r\n        }\r\n        if (!isInt(newObj)) {\r\n            return (ERROR_NOT_INT)\r\n        }\r\n        if (!objMaxMin(newObj)) {\r\n            return (ERROR_COORD_MAX_MIN)\r\n        }\r\n    }\r\n    const newData = [...data]\r\n    newData.forEach(item => {\r\n        if (item.x === obj.x && item.y === obj.y) {\r\n            item.x = newObj.x\r\n            item.y = newObj.y\r\n            item.fill = newObj.fill\r\n            item.symbol = newObj.symbol\r\n        }\r\n    })\r\n    return newData\r\n}\r\n\r\nexport const findObjSelector = (data, obj) => {\r\n    const objIsExist = data.find(item => item.x === obj.x && item.y === obj.y)\r\n    if (objIsExist) {\r\n        return objIsExist\r\n    }\r\n}\r\n\r\n\r\nexport const isInt = (obj) => {\r\n    return (obj.x ^ 0) === obj.x && (obj.y ^ 0) === obj.y\r\n}\r\n\r\nexport const objMaxMin = (obj) => {\r\n    if ((0 <= obj.x && obj.x <= 10) && (0 <= obj.y && obj.y <= 10)) return true\r\n}\r\n\r\nexport const showMessage = () => {\r\n    const mess = document.querySelector('.error')\r\n    mess.classList.add('error-active')\r\n    setTimeout(() => {\r\n        mess.classList.remove('error-active')\r\n    }, 5000)\r\n}\r\n\r\nexport const rotateObjSelector = (data, x, y, delay) => {\r\n    const newData = [...data]\r\n    newData.forEach((item) => {\r\n        if (item.animate === true) {\r\n            item.x = x\r\n            item.y = y\r\n        }\r\n    })\r\n    let promise = new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(newData)\r\n        }, delay)\r\n    })\r\n    return promise\r\n}\r\n\r\nexport const rotateObjMinMaxSelector = (x, y, radius) => {\r\n    if (radius === 0) return 'Радиус не может быть равен нулю!'\r\n    const point1 = 0 <= (x + radius) && (x + radius <= 10)\r\n    const point2 = 0 <= (y + radius) && (y + radius <= 10)\r\n    const point3 = 0 <= (x - radius) && (x - radius <= 10)\r\n    const point4 = 0 <= (y - radius) && (y - radius <= 10)\r\n    if (!(point1 && point2 && point3 && point4)) {\r\n        return ERROR_GRID_MIN_MAX\r\n    }\r\n}\r\n\r\nexport const moveObjSelector = (data, obj, newObj) => {\r\n    const objIsExist = findObjSelector(data, obj)\r\n    if (!objIsExist) return ERROR_NOT_FOUND\r\n    if (!isInt(newObj)) {\r\n        return ERROR_NOT_INT\r\n    }\r\n    if (!objMaxMin(newObj)) {\r\n        return ERROR_COORD_MAX_MIN\r\n    }\r\n    if (findObjSelector(data, newObj)) {\r\n        return ERROR_COORD_EXIST\r\n    }\r\n    const objIndex = data.findIndex(item => item.x === obj.x && item.y === obj.y)\r\n    const mutationArr = [...data]\r\n    mutationArr[objIndex].x = newObj.x\r\n    mutationArr[objIndex].y = newObj.y\r\n    return mutationArr\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {Modal} from \"antd\";\r\nimport {MenuInput} from \"./MenuInput\";\r\nimport {MenuSelect} from \"./MenuSelect\";\r\n\r\nexport const MenuModal = ({hideModal, modalIsOpen, x, y, changeX, changeY, changeFill, fill,\r\n                              setSymbol, symbol, changeObj}) => {\r\n    return (\r\n        <Modal\r\n            title=\"Изменить объект\"\r\n            visible={modalIsOpen}\r\n            onOk={changeObj}\r\n            onCancel={hideModal}\r\n            cancelText='Отмена'\r\n        >\r\n            <div className=\"menu-modal\">\r\n                <MenuInput id='objX' placeholder='Введите координату X' type='number'\r\n                           htmlFor='objX' labelTitle='Координата X:'\r\n                           onChange={changeX} value={x}\r\n                />\r\n                <MenuInput id='objY' placeholder='Введите координату Y' type='number'\r\n                           htmlFor='objY' labelTitle='Координата Y:'\r\n                           onChange={changeY} value={y}\r\n                />\r\n                <MenuSelect value={symbol} id='objSymbol' htmlFor='objSymbol'\r\n                            onChange={setSymbol} title='Символ'/>\r\n                <MenuInput id='objColor' type='color'\r\n                           htmlFor='objColor' labelTitle='Цвет:'\r\n                           onChange={changeFill} value={fill}\r\n                />\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {MenuComponent} from \"./MenuComponent\";\r\nimport {\r\n    addObjSelector, changeObjSelector,\r\n    delObjSelector, findObjSelector, moveObjSelector, rotateObjMinMaxSelector,\r\n    rotateObjSelector,\r\n    showMessage\r\n} from \"../../utils/methods\";\r\nimport {MenuModal} from \"./MenuModal\";\r\n\r\nexport const MenuContainer = ({menuOpen, data, setData, setMessage, toggleMenuOpen}) => {\r\n    const [x, setX] = useState(0)\r\n    const [y, setY] = useState(0)\r\n    const [newX, setNewX] = useState(0)\r\n    const [newY, setNewY] = useState(0)\r\n    const [radius, setRadius] = useState(0)\r\n    const [symbol, setSymbol] = useState('circle')\r\n    const [fill, setFill] = useState('#000000')\r\n    const [obj, setObj] = useState(null)\r\n    const [modalIsOpen, toggleModalIsOpen] = useState(false)\r\n    const showModal = (value) => {\r\n        setX(value.x)\r\n        setY(value.y)\r\n        setSymbol(value.symbol)\r\n        setFill(value.fill)\r\n        setObj(value)\r\n        console.log(value)\r\n        toggleModalIsOpen(true)\r\n    };\r\n\r\n    const hideModal = () => {\r\n        toggleModalIsOpen(false)\r\n        restart()\r\n    };\r\n    const changeX = (value) => {\r\n        setX(value)\r\n    }\r\n    const changeY = (value) => {\r\n        setY(value)\r\n    }\r\n    const changeNewX = (value) => {\r\n        setNewX(value)\r\n    }\r\n    const changeNewY = (value) => {\r\n        setNewY(value)\r\n    }\r\n    const changeFill = (value) => {\r\n        setFill(value)\r\n    }\r\n    const changeRadius = (value) => {\r\n        setRadius(value)\r\n    }\r\n    const restart = () => {\r\n        changeX(0)\r\n        changeY(0)\r\n        changeFill('#000000')\r\n        changeRadius(0)\r\n        changeNewX(0)\r\n        changeNewY(0)\r\n        setSymbol('circle')\r\n    }\r\n    const addObj = () => {\r\n        const newObj = {x: +x, y: +y, symbol, fill}\r\n        const result = addObjSelector(data, newObj)\r\n        restart()\r\n        if (typeof result === 'string') {\r\n            setMessage(result)\r\n            showMessage()\r\n            return\r\n        }\r\n        setData(result)\r\n        console.log(data)\r\n    }\r\n    const delObj = () => {\r\n        debugger\r\n        const result = delObjSelector(data, {x: +x, y: +y})\r\n        if (typeof result === 'string') {\r\n            setMessage(result)\r\n            showMessage()\r\n            return\r\n        }\r\n        restart()\r\n        setData([...result])\r\n    }\r\n    const searchObj = () => {\r\n        const result = findObjSelector(data, {x: +x, y: +y})\r\n        if (!result) {\r\n            setMessage('Объект не найден! :(')\r\n            showMessage()\r\n            return\r\n        }\r\n        showModal(result)\r\n    }\r\n    const rotateObj = async () => {\r\n        const currentRadius = +radius\r\n        const currentX = +x\r\n        const currentY = +y\r\n        let result = data.findIndex(item => item.x === currentX && item.y === currentY)\r\n        if (result < 0) {\r\n            setMessage('Объекта с такими координатами не существует! Создайте его.')\r\n            showMessage()\r\n            return\r\n        }\r\n        const rotateObjMinMax = rotateObjMinMaxSelector(currentX, currentY, currentRadius)\r\n        if (rotateObjMinMax) {\r\n            setMessage(rotateObjMinMax)\r\n            showMessage()\r\n            return\r\n        }\r\n        toggleMenuOpen(false)\r\n        const currentData = [...data]\r\n        currentData[result].animate = true\r\n        let newData = await rotateObjSelector(currentData, (currentX + currentRadius), currentY, 1000)\r\n        setData(newData)\r\n        newData = await rotateObjSelector(currentData, currentX, (currentY + currentRadius), 1000)\r\n        setData(newData)\r\n        newData = await rotateObjSelector(currentData, (currentX - currentRadius), currentY, 1000)\r\n        setData(newData)\r\n        newData = await rotateObjSelector(currentData, currentX, (currentY - currentRadius), 1000)\r\n        setData(newData)\r\n        newData = await rotateObjSelector(currentData, (currentX + currentRadius), currentY, 1000)\r\n        setData(newData)\r\n        newData = await rotateObjSelector(currentData, currentX, currentY, 1000)\r\n        result = data.findIndex(item => item.animate === true)\r\n        delete newData[result].animate\r\n        setData(newData)\r\n        restart()\r\n        toggleMenuOpen(true)\r\n    }\r\n    const moveObj = () => {\r\n        const result = moveObjSelector(data, {x: +x, y: +y}, {x: +newX, y: +newY})\r\n        if (typeof result === 'string') {\r\n            setMessage(result)\r\n            showMessage()\r\n            return\r\n        }\r\n        setData(result)\r\n        restart()\r\n    }\r\n    const changeObj = () => {\r\n        const newObj = {...obj}\r\n        newObj.x = +x\r\n        newObj.y = +y\r\n        newObj.fill = fill\r\n        newObj.symbol = symbol\r\n        const result = changeObjSelector(data, obj, newObj)\r\n        if (typeof result === 'string') {\r\n            setMessage(result)\r\n            showMessage()\r\n            return\r\n        }\r\n        setData(result)\r\n        hideModal()\r\n    }\r\n    return (\r\n\r\n        <>\r\n            <MenuComponent menuOpen={menuOpen} x={x} changeX={changeX} newX={newX} changeNewX={changeNewX}\r\n                           y={y} changeY={changeY} addObj={addObj} newY={newY} changeNewY={changeNewY}\r\n                           setSymbol={setSymbol} symbol={symbol} delObj={delObj} rotateObj={rotateObj}\r\n                           fill={fill} changeFill={changeFill} restart={restart} moveObj={moveObj}\r\n                           changeRadius={changeRadius} radius={radius} searchObj={searchObj}\r\n            />\r\n            <MenuModal changeFill={changeFill} fill={fill} hideModal={hideModal}\r\n                       modalIsOpen={modalIsOpen} x={x} changeX={changeX} y={y} changeY={changeY}\r\n                       setSymbol={setSymbol} symbol={symbol} changeObj={changeObj}/>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport './Message.scss'\r\nimport InfoCircleOutlined from \"@ant-design/icons/lib/icons/InfoCircleOutlined\";\r\n\r\nexport const Message = ({message}) => {\r\n    return (\r\n        <div className=\"error\">\r\n            <div className=\"error-icon\">\r\n                <InfoCircleOutlined style={{color: '#1890FF', fontSize: '50px'}} />\r\n            </div>\r\n            <p className=\"error-text\">\r\n                {message || 'Неизвестная ошибка :('}\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { VictoryChart, VictoryScatter, VictoryTheme } from 'victory';\r\n\r\n\r\nexport const Grid = ({data}) => {\r\n    return (\r\n        <div className=\"grid\">\r\n            <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                domain={{ x: [0, 10], y: [0, 10] }}\r\n                animate={{duration: 1000}}\r\n            >\r\n                <VictoryScatter\r\n                    size={5}\r\n                    data={data}\r\n                    style={{ data: { fill: ({datum}) => datum.fill ?  datum.fill : 'black'} }}\r\n                />\r\n            </VictoryChart>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\nimport './App.scss';\nimport {MenuContainer} from \"./components/Menu/MenuContainer\";\nimport {Message} from \"./components/common/Message/Message\";\nimport {Grid} from \"./components/Grid/Grid\";\n\nfunction App() {\n    const [menuOpen, toggleMenuOpen] = useState(true)\n    const [data, setData] = useState(\n        [\n            {x: 1, y: 1, fill: '#000000', symbol: 'circle'},\n            {x: 2, y: 2, fill: '#ffc0cb', symbol: 'circle'},\n            {x: 3, y: 3, fill: '#ffd700', symbol: 'circle'}\n        ]\n    )\n    const [message, setMessage] = useState('')\n    return (\n        <div className=\"App\">\n            <MenuContainer setMessage={(message) => setMessage(message)} menuOpen={menuOpen} data={data}\n                           setData={setData} toggleMenuOpen={toggleMenuOpen} />\n            <Grid data={data}/>\n            <Message message={message}/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Message during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}